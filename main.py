import os
import logging
import time

import telebot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton
from web3 import Web3
from eth_account import Account
import requests

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TOKEN = '8191840337:AAHnIR4r4NMFqeUxnQyuAM5Ruqsx1g3uJKQ'
INFURA_URL = '01063d1643764a949d720d2ff4a8e3a6'
AML_API_KEY = os.getenv('AML_API_KEY')

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Web3
w3 = Web3(Web3.HTTPProvider(INFURA_URL)) if INFURA_URL else None

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∫—É—Ä—Å–æ–≤
COURSES = {
    'crypto_basics': {
        'title': '–û—Å–Ω–æ–≤—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –∏ –±–ª–æ–∫—á–µ–π–Ω–∞',
        'description': '–ò–∑—É—á–∏—Ç–µ –æ—Å–Ω–æ–≤—ã —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –±–ª–æ–∫—á–µ–π–Ω –∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç.',
        'price': 50
    },
    'defi_advanced': {
        'title': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π DeFi',
        'description': '–£–≥–ª—É–±–ª–µ–Ω–Ω—ã–π –∫—É—Ä—Å –ø–æ –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–º —Ñ–∏–Ω–∞–Ω—Å–∞–º.',
        'price': 150
    },
    'nft_mastery': {
        'title': '–ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ NFT',
        'description': '–í—Å–µ —á—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –æ –Ω–µ–≤–∑–∞–∏–º–æ–∑–∞–º–µ–Ω—è–µ–º—ã—Ö —Ç–æ–∫–µ–Ω–∞—Ö.',
        'price': 100
    }
}

# –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}

user_activity = {}


def check_flood(chat_id):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–µ —Ñ–ª—É–¥–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"""
    current_time = time.time()

    if chat_id not in user_activity:
        user_activity[chat_id] = {'count': 1, 'time': current_time}
        return False

    # –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ –±–æ–ª—å—à–µ 5 —Å–µ–∫—É–Ω–¥ - —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
    if current_time - user_activity[chat_id]['time'] > 5:
        user_activity[chat_id] = {'count': 1, 'time': current_time}
        return False

    user_activity[chat_id]['count'] += 1

    # –ï—Å–ª–∏ –±–æ–ª—å—à–µ 3 —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ 5 —Å–µ–∫—É–Ω–¥ - —Ñ–ª—É–¥
    if user_activity[chat_id]['count'] > 3:
        # –ë–ª–æ–∫–∏—Ä—É–µ–º –Ω–∞ 10 —Å–µ–∫—É–Ω–¥
        user_activity[chat_id]['time'] = current_time + 10
        return True

    return False

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    markup.add(
        KeyboardButton("üè¶ –û –Ω–∞—Å"),
        KeyboardButton("üìä –ö—É—Ä—Å—ã"),
        KeyboardButton("‚úÖ AML –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—à–µ–ª—å–∫–∞"),
        KeyboardButton("üõ†Ô∏è –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏"),
        KeyboardButton("üìä –ë–∏—Ä–∂–∞"),

    )
    return markup


# –ú–µ–Ω—é –∫—É—Ä—Å–æ–≤
def courses_menu():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    for course_id, course in COURSES.items():
        markup.add(KeyboardButton(f"{course['title']} - {course['price']} USDT"))
    markup.add(KeyboardButton("–ù–∞–∑–∞–¥ ‚Ü©Ô∏è"))
    return markup


# –ú–µ–Ω—é –∫–æ—à–µ–ª—å–∫–∞
def wallet_menu():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    markup.add(
        KeyboardButton("–ü–æ–ø–æ–ª–Ω–∏—Ç—å ‚ÜóÔ∏è"),
        KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å ‚ÜòÔ∏è"),
        KeyboardButton("–û–±–º–µ–Ω—è—Ç—å üí±"),
        KeyboardButton("–ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π üìú"),
        KeyboardButton("–ù–∞–∑–∞–¥ ‚Ü©Ô∏è")
    )
    return markup


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start(message):
    user = message.from_user
    bot.send_message(
        message.chat.id,
        f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Mosca\n\nüìç –ú–æ—Å–∫–≤–∞, –ü—Ä–µ—Å–Ω–µ–Ω—Å–∫–∞—è –Ω–∞–±–µ—Ä–µ–∂–Ω–∞—è 12, –ë–∞—à–Ω—è –§–µ–¥–µ—Ä–∞—Ü–∏—è. –í–æ—Å—Ç–æ–∫, —ç—Ç–∞–∂ 11\n\n'
        f'üìÖ –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –¥–ª—è –≤–∞—Å 24/7. –ë–µ–∑ –æ–±–µ–¥–∞ –∏ –≤—ã—Ö–æ–¥–Ω—ã—Ö.\n\nüíµ –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –∑–∞ –Ω–∞–ª–∏—á–Ω—ã–µ —Ä—É–±–ª–∏.\n\nüíπ –°–∞–º—ã–π –Ω–∏–∑–∫–∏–π –∫—É—Ä—Å –Ω–∞ –ø–æ–∫—É–ø–∫—É USDT –∏ –ª—É—á—à–∏–π –∫—É—Ä—Å –ø–æ–∫—É–ø–∫–∏ USDT –≤ –ú–æ—Å–∫–≤–µ.\n\n'
        f'ü§ë –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∫–∞–∫–∏—Ö –ª–∏–±–æ –∫–æ–º–∏—Å—Å–∏–∏ –Ω–∞ –ø–æ–∫—É–ø–∫—É –∏ –ø—Ä–æ–¥–∞–∂—É USDT\n\n–î–ª—è –ø–æ–∫—É–ø–∫–∏ USDT –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û–±–º–µ–Ω"',
        reply_markup=main_menu()
    )

def get_exchange_rate(base="USD", target="UAH"):
    url = f"https://api.exchangerate-api.com/v4/latest/{base}"
    try:
        response = requests.get(url)
        data = response.json()
        return data["rates"].get(target)
    except Exception as e:
        return {"error": str(e)}


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def handle_message(message):
    chat_id = message.chat.id

    if check_flood(chat_id):
        bot.send_message(chat_id, "–ú—ã –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ 10 —Å–µ–∫—É–Ω–¥.")
        return

    text = message.text

    if text == "üè¶ –û –Ω–∞—Å":
        show_about(message)
    elif text == "üìä –ö—É—Ä—Å—ã":
        show_courses(message)
    elif text == "‚úÖ AML –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—à–µ–ª—å–∫–∞":
        start_aml_check(message)
    elif text == "üõ†Ô∏è –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏":
        show_contact(message)
    elif text == "üìä –ë–∏—Ä–∂–∞":
        show_exchange(message)
    elif text == "–ù–∞–∑–∞–¥ ‚Ü©Ô∏è":
        back_to_main(message)
    else:
        bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.", reply_markup=main_menu())


# –ü–æ–∫–∞–∑–∞—Ç—å –∫—É—Ä—Å—ã
def show_courses(message):
    bot.send_message(
        message.chat.id,f'–ö—É—Ä—Å –æ–±–º–µ–Ω–∞ —Ä—É–±–ª–µ–π –Ω–∞ USDT:\n\n–ö—É–ø–∏—Ç—å 1 USDT = {get_exchange_rate("USD", "RUB")+1} RUB\n–ü—Ä–æ–¥–∞—Ç—å 1 USDT = {get_exchange_rate("USD", "RUB")-1} RUB\n\n*–¥–∞–Ω–Ω—ã–π –∫—É—Ä—Å —è–≤–ª—è–µ—Ç—Å—è –±–∏—Ä–∂–µ–≤—ã–º –∏ –º–µ–Ω—è–µ—Ç—Å—è –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É. '
                        '\n\n–ö–æ–º–º–∏—Å–∏—è 3$ –∑–∞ –≤—ã–≤–æ–¥ USDT –≤ —Å–µ—Ç–∏ Tron.\n\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–ø—É—Å–∫–∞ –∫ –Ω–∞–º –≤ –æ—Ñ–∏—Å –∏ –ø–æ–∫—É–ø–∫–∏ USDT, –≤–∞–º –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É - –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û–±–º–µ–Ω"',
        parse_mode='HTML',
        reply_markup=main_menu()
    )



# –ù–∞—á–∞—Ç—å AML –ø—Ä–æ–≤–µ—Ä–∫—É
def start_aml_check(message):
    user_states[message.chat.id] = 'waiting_wallet'
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("–ù–∞–∑–∞–¥ ‚Ü©Ô∏è"))

    bot.send_message(
        message.chat.id,
        "–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞ –¥–ª—è AML –ø—Ä–æ–≤–µ—Ä–∫–∏:",
        reply_markup=main_menu()
    )


# –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞


# AML –ø—Ä–æ–≤–µ—Ä–∫–∞ (–∑–∞–≥–ª—É—à–∫–∞)
def perform_aml_check(wallet_address: str) -> dict:
    try:
        # –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ AML API
        return {
            'risk_score': 'low',
            'is_risky': False,
            'details': '–ù–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏'
        }
    except Exception as e:
        logger.error(f"AML check error: {e}")
        return {
            'risk_score': 'unknown',
            'is_risky': False,
            'details': '–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É'
        }


# –ü–æ–∫–∞–∑–∞—Ç—å –±–∏—Ä–∂—É
def show_exchange(message):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("–û–±–º–µ–Ω—è—Ç—å üí±"))
    markup.add(KeyboardButton("–ù–∞–∑–∞–¥ ‚Ü©Ô∏è"))

    bot.send_message(
        message.chat.id,'–° —Ä–∞–¥–æ—Å—Ç—å—é —Å–æ–æ–±—â–∞–µ–º –≤–∞–º –æ–± –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω–æ–π –±–∏—Ä–∂–∏ Mosca! üéâ\n\nüåê https://moscaex.org\n\n'
                        '–ú—ã —Å—Ç—Ä–µ–º–∏–º—Å—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞—à–∏–º –∫–ª–∏–µ–Ω—Ç–∞–º –ª—É—á—à–∏–π —Å–µ—Ä–≤–∏—Å –∏ –Ω–∞–¥–µ–∂–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —É—Å–ø–µ—à–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏. \n\n'
                        '–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏!\n\n–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞–º –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –Ω–æ–≤—ã–µ –≥–æ—Ä–∏–∑–æ–Ω—Ç—ã –≤ –º–∏—Ä–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç! üöÄ',
        parse_mode='HTML',
        reply_markup=main_menu()
    )





# –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—Å
def show_about(message):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("–ù–∞–∑–∞–¥ ‚Ü©Ô∏è"))

    bot.send_message(
        message.chat.id, "ü§ñ –û –Ω–∞—Å\n\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç –¥–ª—è –æ–±–º–µ–Ω–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã!\n\nüí∞ –ú—ã –∑–∞–Ω–∏–º–∞–µ–º—Å—è –æ–±–º–µ–Ω–æ–º –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –±–æ–ª–µ–µ 3—Ö –ª–µ—Ç.\n\nüìÖ –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –¥–ª—è –≤–∞—Å 24/7."
                         "\n\nüíµ –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –∑–∞ –Ω–∞–ª–∏—á–Ω—ã–µ —Ä—É–±–ª–∏.\n\nüíπ –£ –Ω–∞—Å –≤—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å USDT –±–µ–∑ –∫–æ–º–∏—Å—Å–∏–∏ –ø–æ —Å–∞–º–æ–º—É –ª—É—á—à–µ–º—É –∫—É—Ä—Å—É –≤ –ú–æ—Å–∫–≤–µ.  "
                         "\n\n–ö–æ–º–∏—Å—Å–∏—è 3$ –∑–∞ –≤—ã–≤–æ–¥ USDT –≤ —Å–µ—Ç–∏ Tron.\n\n –∞–¥—Ä–µ—Å: –ú–æ—Å–∫–≤–∞, –ü—Ä–µ—Å–Ω–µ–Ω—Å–∫–∞—è –Ω–∞–±–µ—Ä–µ–∂–Ω–∞—è 12, –ë–∞—à–Ω—è –§–µ–¥–µ—Ä–∞—Ü–∏—è. –í–æ—Å—Ç–æ–∫, —ç—Ç–∞–∂ 11\n\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–ø—É—Å–∫–∞ –∫ –Ω–∞–º –≤ –æ—Ñ–∏—Å –∏ –ø–æ–∫—É–ø–∫–∏ USDT, –≤–∞–º –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
        parse_mode='HTML',
        reply_markup=main_menu()
    )


# –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã
def show_contact(message):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("–ù–∞–∑–∞–¥ ‚Ü©Ô∏è"))

    bot.send_message(
        message.chat.id,
        '–ù–∞—à–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã –Ω–∞ —Å–≤—è–∑–∏ 24/7 –∏ –≥–æ—Ç–æ–≤—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ª—é–±—ã–µ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã.\n\n–î–ª—è —Å–≤—è–∑–∏ —Å –Ω–∞–º–∏ –Ω–∞–ø–∏—à–∏—Ç–µ  - @Mosca67_Support\n\n'
        '–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–ø—É—Å–∫–∞ –∫ –Ω–∞–º –≤ –æ—Ñ–∏—Å –∏ –ø–æ–∫—É–ø–∫–∏ USDT, –≤–∞–º –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É - –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û–±–º–µ–Ω"',
        parse_mode='HTML',
        reply_markup=main_menu()
    )


# –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def back_to_main(message):
    bot.send_message(
        message.chat.id,
        "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
        reply_markup=main_menu()
    )


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    bot.infinity_polling()